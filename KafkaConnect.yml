### Kafka, Zookeeper y Kafka Connect con Debezium

1.  **Iniciar Zookeeper y Kafka**:
    Asegúrate de que Zookeeper y Kafka estén en ejecución. Si usas Docker Compose, puedes usar un archivo como el siguiente (ej. 'docker-compose.yml' en la raíz del proyecto):

    '''yaml
    version: '3.7'
    services:
      zookeeper:
        image: confluentinc/cp-zookeeper:7.3.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
          - "2181:2181"
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

      kafka:
        image: confluentinc/cp-kafka:7.3.0
        hostname: kafka
        container_name: kafka
        depends_on:
          - zookeeper
        ports:
          - "9092:9092" # Para clientes fuera de Docker (como tu app Quarkus local)
          - "29092:29092" # Para clientes dentro de la red Docker (como Kafka Connect)
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

      kafka-connect:
        image: confluentinc/cp-kafka-connect:7.3.0 # Asegúrate de que esta imagen tenga el conector Debezium o móntalo
        hostname: kafka-connect
        container_name: kafka-connect
        depends_on:
          - kafka
        ports:
          - "8083:8083"
        environment:
          CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
          CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
          CONNECT_REST_PORT: 8083
          CONNECT_GROUP_ID: kafka-connect-group
          CONNECT_CONFIG_STORAGE_TOPIC: _kafka_connect_configs
          CONNECT_OFFSET_STORAGE_TOPIC: _kafka_connect_offsets
          CONNECT_STATUS_STORAGE_TOPIC: _kafka_connect_status
          CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
          CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
          CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
          CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
          CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components/" # Añade tu Debezium PG conector aquí
        # Si necesitas añadir Debezium (si no está en la imagen base):
        # volumes:
        #   - ./path_to_debezium_pg_connector_dir:/usr/share/confluent-hub-components/debezium-connector-postgres

    '''
    Ejecuta con: 'docker-compose up -d zookeeper kafka' (espera a que inicien) y luego 'docker-compose up -d kafka-connect'.
    *Nota: Necesitarás descargar el conector Debezium para PostgreSQL y hacerlo accesible a Kafka Connect, ya sea construyendo una imagen personalizada o montando el directorio del conector como un volumen.* Una forma fácil es usar la imagen 'debezium/connect:latest' que ya incluye los conectores.